---
# Ansible Playbook for Scientific Calculator Deployment
# Author: Your Name
# Description: Deploy Scientific Calculator Docker container

- name: Deploy Scientific Calculator Application
  hosts: localhost
  connection: local
  become: yes
  
  vars:
    app_name: "scientific-calculator"
    docker_image: "{{ docker_image | default('your-dockerhub-username/scientific-calculator:latest') }}"
    container_name: "{{ app_name }}-container"
    host_port: 8080
    container_port: 8080
    log_dir: "/var/log/{{ app_name }}"
    
  tasks:
    - name: Print deployment information
      debug:
        msg: |
          Starting deployment of Scientific Calculator
          Docker Image: {{ docker_image }}
          Container Name: {{ container_name }}
          
    - name: Check if Docker is installed
      command: docker --version
      register: docker_version
      failed_when: false
      
    - name: Display Docker version
      debug:
        msg: "Docker version: {{ docker_version.stdout }}"
      when: docker_version.rc == 0
      
    - name: Fail if Docker is not installed
      fail:
        msg: "Docker is not installed. Please install Docker first."
      when: docker_version.rc != 0
      
    - name: Create log directory
      file:
        path: "{{ log_dir }}"
        state: directory
        mode: '0755'
        
    - name: Stop existing container if running
      docker_container:
        name: "{{ container_name }}"
        state: absent
      ignore_errors: yes
      
    - name: Remove existing container
      docker_container:
        name: "{{ container_name }}"
        state: absent
      ignore_errors: yes
      
    - name: Pull latest Docker image
      docker_image:
        name: "{{ docker_image }}"
        source: pull
        force_source: yes
      register: pull_result
      
    - name: Display image pull result
      debug:
        msg: "Docker image pulled successfully: {{ pull_result.image.Id }}"
      when: pull_result.changed
      
    - name: Run Scientific Calculator container
      docker_container:
        name: "{{ container_name }}"
        image: "{{ docker_image }}"
        state: started
        restart_policy: always
        ports:
          - "{{ host_port }}:{{ container_port }}"
        volumes:
          - "{{ log_dir }}:/app/logs"
        environment:
          JAVA_OPTS: "-Xms256m -Xmx512m"
        labels:
          app: "{{ app_name }}"
          version: "1.0.0"
          managed_by: "ansible"
          
    - name: Wait for container to be running
      wait_for:
        timeout: 30
      delegate_to: localhost
      
    - name: Verify container is running
      docker_container_info:
        name: "{{ container_name }}"
      register: container_info
      
    - name: Display container status
      debug:
        msg: |
          Container Status: {{ container_info.container.State.Status }}
          Container ID: {{ container_info.container.Id[:12] }}
          Image: {{ container_info.container.Config.Image }}
          
    - name: Check container logs
      command: docker logs {{ container_name }} --tail 10
      register: container_logs
      
    - name: Display recent container logs
      debug:
        msg: "Recent logs: {{ container_logs.stdout_lines }}"
        
    - name: Create deployment verification script
      copy:
        content: |
          #!/bin/bash
          echo "=== Scientific Calculator Deployment Verification ==="
          echo "Date: $(date)"
          echo "Container Status:"
          docker ps | grep {{ container_name }}
          echo ""
          echo "Container Details:"
          docker inspect {{ container_name }} | jq '.[] | {Name: .Name, State: .State.Status, Image: .Config.Image}'
          echo ""
          echo "Recent Logs:"
          docker logs {{ container_name }} --tail 5
          echo "=== Verification Complete ==="
        dest: "/tmp/verify_deployment.sh"
        mode: '0755'
        
    - name: Run deployment verification
      command: /tmp/verify_deployment.sh
      register: verification
      
    - name: Display verification results
      debug:
        msg: "{{ verification.stdout_lines }}"
        
  handlers:
    - name: Clean up old Docker images
      command: docker image prune -f
      
  post_tasks:
    - name: Summary of deployment
      debug:
        msg: |
          ===============================================
          DEPLOYMENT COMPLETED SUCCESSFULLY
          ===============================================
          Application: Scientific Calculator
          Container: {{ container_name }}
          Image: {{ docker_image }}
          Port Mapping: {{ host_port }}:{{ container_port }}
          Log Directory: {{ log_dir }}
          
          To interact with the application:
          docker exec -it {{ container_name }} java -jar /app/scientific-calculator.jar
          
          To view logs:
          docker logs {{ container_name }}
          
          To stop the application:
          docker stop {{ container_name }}
          ===============================================