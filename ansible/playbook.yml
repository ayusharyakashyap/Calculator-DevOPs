---
# Simplified Ansible Playbook for Scientific Calculator Deployment
# Author: Student DevOps Project
# Description: Deploy Scientific Calculator Docker container locally

- name: Deploy Scientific Calculator Application
  hosts: localhost
  connection: local
  gather_facts: no
  become: no
  
  vars:
    app_name: "scientific-calculator"
    docker_image: "{{ docker_image | default('scientific-calculator:1.0.0') }}"
    container_name: "{{ app_name }}-container"
    host_port: 8080
    container_port: 8080
    
  tasks:
    - name: Print deployment information
      debug:
        msg: |
          ==========================================
          Starting deployment of Scientific Calculator
          Docker Image: {{ docker_image }}
          Container Name: {{ container_name }}
          Host Port: {{ host_port }}
          ==========================================
          
    - name: Check if Docker is running
      command: /Applications/Docker.app/Contents/Resources/bin/docker ps
      register: docker_status
      failed_when: docker_status.rc != 0
      
    - name: Display Docker status
      debug:
        msg: "Docker is running successfully"
      when: docker_status.rc == 0
        
    - name: Stop existing container if running
      command: /Applications/Docker.app/Contents/Resources/bin/docker stop {{ container_name }}
      register: stop_result
      failed_when: false
      changed_when: stop_result.rc == 0
      
    - name: Remove existing container
      command: /Applications/Docker.app/Contents/Resources/bin/docker rm {{ container_name }}
      register: remove_result
      failed_when: false
      changed_when: remove_result.rc == 0
      
    - name: Display container cleanup results
      debug:
        msg: |
          Container stop result: {{ 'Success' if stop_result.rc == 0 else 'Not running' }}
          Container remove result: {{ 'Success' if remove_result.rc == 0 else 'Not found' }}
      
    - name: Pull Docker image from registry
      command: /Applications/Docker.app/Contents/Resources/bin/docker pull {{ docker_image }}
      register: pull_result
      changed_when: true

    - name: Display image pull results
      debug:
        msg: "Docker image {{ docker_image }} pulled successfully"

    - name: Run Scientific Calculator container
      command: >
        /Applications/Docker.app/Contents/Resources/bin/docker run -d 
        --name {{ container_name }}
        --restart always
        -p {{ host_port }}:{{ container_port }}
        {{ docker_image }}
      register: run_result
      
    - name: Display container start result
      debug:
        msg: "Container started with ID: {{ run_result.stdout[:12] }}"
        
    - name: Wait for container to be ready
      pause:
        seconds: 5
        
    - name: Verify container is running
      shell: "/Applications/Docker.app/Contents/Resources/bin/docker ps --filter 'name={{ container_name }}'"
      register: container_status
      
    - name: Display container status
      debug:
        msg: |
          Container Status:
          {{ container_status.stdout }}
          
    - name: Check container logs
      command: /Applications/Docker.app/Contents/Resources/bin/docker logs {{ container_name }} --tail 10
      register: container_logs
      
    - name: Display recent container logs
      debug:
        msg: |
          Recent Container Logs:
          {{ container_logs.stdout }}
        
    - name: Test application accessibility
      uri:
        url: "http://localhost:{{ host_port }}"
        method: GET
        timeout: 10
      register: health_check
      failed_when: false
      
    - name: Display health check result
      debug:
        msg: |
          {% if health_check.status is defined %}
          Application health check: {{ 'PASSED' if health_check.status == 200 else 'FAILED' }}
          Response code: {{ health_check.status }}
          {% else %}
          Application health check: Console application - no HTTP endpoint
          {% endif %}
        
  post_tasks:
    - name: Deployment Summary
      debug:
        msg: |
          ===============================================
          DEPLOYMENT COMPLETED SUCCESSFULLY
          ===============================================
          Application: Scientific Calculator
          Container Name: {{ container_name }}
          Docker Image: {{ docker_image }}
          Port Mapping: localhost:{{ host_port }}
          
          To interact with the calculator:
          docker exec -it {{ container_name }} java -jar /app/scientific-calculator.jar
          
          To view logs:
          docker logs {{ container_name }}
          
          To stop the application:
          docker stop {{ container_name }}
          
          To remove the container:
          docker rm {{ container_name }}
          ===============================================